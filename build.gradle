plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

minecraft_version_string = project.minecraft_version.replace(".", "_")

// Versions must be in order!!
// Older versions are first in the list and then newer versions are at the end of the list.
def supported_versions = [
		"1.19.2",
		"1.19.4",
		"1.20.1",
		"1.20.2",
		"1.20.4"
]

def build_properties_text = new StringBuilder()

def version_index = -1

supported_versions.eachWithIndex { version, index ->
	def version_string = version.replace(".", "_")
	build_properties_text.append("MC_$version_string=$index\n")
	if (version_string == minecraft_version_string) {
		version_index = index
	}
}

if (version_index == -1) {
	throw new GradleException("Current Minecraft version $minecraft_version_string is not part of the supported versions.")
}

build_properties_text.append("MC_VER=$version_index")

new File(projectDir, "build.properties").text = build_properties_text

mod_version_suffix = project["mod_version_suffix_" + minecraft_version_string]
fabric_version = project["fabric_version_" + minecraft_version_string]
cardinal_version = project["cardinal_version_" + minecraft_version_string]
cloth_version = project["cloth_version_" + minecraft_version_string]
modmenu_version = project["modmenu_version_" + minecraft_version_string]
compatible_versions = project["compatible_versions_" + minecraft_version_string]
yarn_mappings = project["yarn_mappings_" + minecraft_version_string]

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + mod_version_suffix
group = project.maven_group

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven {url 'https://jitpack.io'}
	maven {url "https://maven.terraformersmc.com/"}
	maven {url "https://maven.shedaniel.me/"}
	maven { url 'https://maven.wispforest.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Adds a dependency on the base cardinal components module (required by every other module)
	// Replace modImplementation with modApi if you expose components in your own API
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cardinal_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cardinal_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-block:${project.cardinal_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_version}"
	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional)
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cardinal_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cardinal_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-block:${project.cardinal_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"

	annotationProcessor 'systems.manifold:manifold-preprocessor:2024.1.12'
	testAnnotationProcessor 'systems.manifold:manifold-preprocessor:2024.1.12'
}


tasks.withType(JavaCompile) {
	options.compilerArgs += ['-Xplugin:Manifold']
}

processResources {
	inputs.property "version", project.mod_version
	inputs.property "compatible_versions", project.compatible_versions

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version, "compatible_versions": project.compatible_versions
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
